import SpriteKit

enum WeaponType {
    case shotgun, machineGun, knife, bomb
}

class WeaponManager {
    static let shared = WeaponManager()
    
    func fireWeapon(from player: Player) {
        switch player.weapon {
        case .shotgun:
            fireShotgun(from: player)
        case .machineGun:
            fireMachineGun(from: player)
        case .knife:
            performKnifeAttack(from: player)
        case .bomb:
            throwBomb(from: player)
        }
    }
    
    private func fireShotgun(from player: Player) {
        let bullet = SKSpriteNode(color: .yellow, size: CGSize(width: 10, height: 5))
        bullet.position = player.position
        bullet.physicsBody = SKPhysicsBody(rectangleOf: bullet.size)
        bullet.physicsBody?.velocity = CGVector(dx: 300, dy: 0)
        bullet.physicsBody?.affectedByGravity = false
        
        player.parent?.addChild(bullet)
        
        bullet.run(SKAction.waitAndRemove(duration: 2.0))
    }
    
    private func fireMachineGun(from player: Player) {
        let fireAction = SKAction.repeat(SKAction.sequence([
            SKAction.run { self.fireShotgun(from: player) },
            SKAction.wait(forDuration: 0.1)
        ]), count: 5)
        
        player.run(fireAction)
    }
    
    private func performKnifeAttack(from player: Player) {
        let knifeTextures = (1...3).map { SKTexture(imageNamed: "player_knife_\($0)") }
        let knifeAnimation = SKAction.animate(with: knifeTextures, timePerFrame: 0.1)
        
        player.run(knifeAnimation)
    }
    
    private func throwBomb(from player: Player) {
        let bomb = SKSpriteNode(color: .red, size: CGSize(width: 30, height: 30))
        bomb.position = player.position
        bomb.physicsBody = SKPhysicsBody(rectangleOf: bomb.size)
        bomb.physicsBody?.velocity = CGVector(dx: 200, dy: 100)
        bomb.physicsBody?.affectedByGravity = true
        
        player.parent?.addChild(bomb)
        
        let explosion = SKAction.sequence([
            SKAction.wait(forDuration: 2.0),
            SKAction.run {
                let explosionEffect = SKSpriteNode(color: .orange, size: CGSize(width: 100, height: 100))
                explosionEffect.position = bomb.position
                player.parent?.addChild(explosionEffect)
                explosionEffect.run(SKAction.sequence([
                    SKAction.fadeOut(withDuration: 0.5),
                    SKAction.removeFromParent()
                ]))
            },
            SKAction.removeFromParent()
        ])
        
        bomb.run(explosion)
    }
}
